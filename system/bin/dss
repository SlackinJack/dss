#!/system/bin/sh

display_usage() { 
	echo "usage: dss {enable|disable} {user|system} [package] ($1)"
} 

# give a message the very first time the command is run
# keep a dot file on /data to remember this
if [ ! -e /data/.dss.hasran ]; then
    touch /data/.dss.hasran
    echo "You are running this script for the first time."
    echo "If you apply this script for 'system' apps, it might cause Google Play-systemupdate to fail and reboot."
    echo "In that case, do not forget to run this script with 'enable' BEFORE applying the Google-Play systemupdate."
    echo "You won't see this message when you run the script again."
    exit 0
fi

if [  $# -ne 2 ] && [ $# -ne 3 ]; then 
		display_usage "needs 2 or 3 arguments"
		exit 1
fi

if [ "$1" != "enable" ] && [ "$1" != "disable" ]; then
    display_usage "first argument must be 'enable' or 'disable'"
    exit 1
fi

if [ "$2" != "user" ] && [ "$2" != "system" ]; then
    display_usage "second argument must be 'user' or 'system'"
    exit 1
fi

# use -e flag to filter only "enabled" packages
# use -3 flag to filter only "3rd party" packages
# use -s flag to filter only "system" packages

if [ "$2" == "user" ]; then
    FLAG="-3"
else
    FLAG="-s"
fi

PLIST=`/system/bin/cmd package list packages -e $FLAG | grep -v Swift | sort | sed 's/package://g'`

if [ $# -eq 3 ]; then
    if echo $PLIST | /system/bin/grep --quiet "$3"; then
        PLIST=( $3 )
    else
        display_usage "third argument [$3]: package does not exist"
        exit 1
    fi
fi

CMD="$1"

if [ "$1" == "enable" ]; then
    CMD=enable
else
    if [ "$1" == "disable" ]; then
        CMD=disable
    else
        CMD=enable
    fi
fi

dodis () {
	pm "$1" "$2" 2>/dev/null
}

# next applies to ALL packages which we selected
for i in $PLIST; do
    # next applies to ALL packages
    dodis $CMD "$i/com.android.billingclient.api.ProxyBillingActivity" &
    dodis $CMD "$i/com.google.android.gms.ads.settings.AdsSettingsActivity" &
    dodis $CMD "$i/com.braintreepayments.api.internal.AnalyticsIntentService" &
    dodis $CMD "$i/com.crashlytics.android.CrashlyticsInitProvider" &
    dodis $CMD "$i/com.facebook.ads.internal.ipc.AdsMessengerService" &
    dodis $CMD "$i/com.facebook.ads.internal.ipc.AdsProcessPriorityService" &
    dodis $CMD "$i/com.facebook.internal.FacebookInitProvider" &
    dodis $CMD "$i/com.google.analytics.tracking.android.CampaignTrackingReceiver" &
    dodis $CMD "$i/com.google.analytics.tracking.android.CampaignTrackingService" &
    dodis $CMD "$i/com.google.android.gms.ads.AdActivity" &
    dodis $CMD "$i/com.google.android.gms.ads.AdRequestBrokerService" &
    dodis $CMD "$i/com.google.android.gms.ads.AdService" &
    dodis $CMD "$i/com.google.android.gms.ads.MobileAdsInitProvider" &
    dodis $CMD "$i/com.google.android.gms.ads.cache.CacheBrokerService" &
    dodis $CMD "$i/com.google.android.gms.ads.identifier.service.AdIdProviderService" &
    dodis $CMD "$i/com.google.android.gms.ads.identifier.service.AdvertisingIdNotificationService" &
    dodis $CMD "$i/com.google.android.gms.ads.identifier.service.AdvertisingIdService" &
    dodis $CMD "$i/com.google.android.gms.ads.jams.NegotiationService" &
    dodis $CMD "$i/com.google.android.gms.ads.measurement.GmpConversionTrackingBrokerService" &
    dodis $CMD "$i/com.google.android.gms.ads.social.GcmSchedulerWakeupService" &
    dodis $CMD "$i/com.google.android.gms.adsidentity.settings.AdsIdentityPersonalizationActivity" &
    dodis $CMD "$i/com.google.android.gms.adsidentity.settings.AdsIdentitySettingsActivity" &
    dodis $CMD "$i/com.google.android.gms.analytics.AnalyticsJobService" &
    dodis $CMD "$i/com.google.android.gms.analytics.AnalyticsReceiver" &
    dodis $CMD "$i/com.google.android.gms.analytics.AnalyticsService" &
    dodis $CMD "$i/com.google.android.gms.analytics.AnalyticsTaskService" &
    dodis $CMD "$i/com.google.android.gms.analytics.CampaignTrackingReceiver" &
    dodis $CMD "$i/com.google.android.gms.analytics.CampaignTrackingService" &
    dodis $CMD "$i/com.google.android.gms.analytics.internal.PlayLogReportingService" &
    dodis $CMD "$i/com.google.android.gms.analytics.service.AnalyticsService" &
    dodis $CMD "$i/com.google.android.gms.measurement.AppMeasurementContentProvider" &
    dodis $CMD "$i/com.google.android.gms.measurement.AppMeasurementInstallReferrerReceiver" &
    dodis $CMD "$i/com.google.android.gms.measurement.AppMeasurementJobService" &
    dodis $CMD "$i/com.google.android.gms.measurement.AppMeasurementReceiver" &
    dodis $CMD "$i/com.google.android.gms.measurement.AppMeasurementService" &
    dodis $CMD "$i/com.google.android.gms.measurement.PackageMeasurementService" &
    dodis $CMD "$i/com.google.android.gms.measurement.PackageMeasurementTaskService" &
    dodis $CMD "$i/com.google.android.gms.measurement.GmpConversionTrackingBrokerService" &
    dodis $CMD "$i/com.google.android.gms.measurement.PackageMeasurementReceiver" &
    dodis $CMD "$i/com.google.android.gms.tagmanager.InstallReferrerReceiver" &
    dodis $CMD "$i/com.google.android.gms.tagmanager.InstallReferrerService" &
    dodis $CMD "$i/com.google.firebase.auth.api.gms.service.FirebaseAuthService" &
    dodis $CMD "$i/com.google.firebase.iid.FirebaseInstanceIdService" &
    dodis $CMD "$i/com.google.firebase.messaging.FirebaseMessagingListenerService" &
    dodis $CMD "$i/com.google.firebase.messaging.FirebaseMessagingService" &
    dodis $CMD "$i/com.google.firebase.perf.provider.FirebasePerfProvider" &
    dodis $CMD "$i/com.google.firebase.provider.FirebasePerfProvider" &
    
    #our fork
    dodis $CMD "$i/android.net.http.MetaDataHolder" &
    dodis $CMD "$i/androidx.appcompat.app.AppLocalesMetadataHolderService" &
    dodis $CMD "$i/androidx.camera.core.impl.MetadataHolderService" &
    dodis $CMD "$i/androidx.car.app.CarAppMetadataHolderService" &
    dodis $CMD "$i/androidx.credentials.playservices.CredentialProviderMetadataHolder" &
    dodis $CMD "$i/com.adyen.checkout.base.analytics.AnalyticsDispatcher" &
    dodis $CMD "$i/com.adyen.checkout.components.analytics.AnalyticsDispatcher" &
    dodis $CMD "$i/com.alibaba.analytics.AnalyticsService" &
    dodis $CMD "$i/com.amazon.client.metrics.nexus.EventUploadService" &
    dodis $CMD "$i/com.amazon.client.metrics.nexus.UploadJobService" &
    dodis $CMD "$i/com.amazon.mls.config.internal.sushi.uploader.BackupUploaderService" &
    dodis $CMD "$i/com.applovin.impl.adview.activity.FullscreenAdService" &
    dodis $CMD "$i/com.applovin.impl.sdk.utils.AppKilledService" &
    dodis $CMD "$i/com.blankj.utilcode.util.MessengerUtils\$ServerService" &
    dodis $CMD "$i/com.braze.push.BrazeFirebaseMessagingService" &
    dodis $CMD "$i/com.burnweb.rnsendintent.RNSendIntentModule" &
    dodis $CMD "$i/com.bytedance.sdk.openadsdk.multipro.aidl.BinderPoolService" &
    dodis $CMD "$i/com.facebook.adspayments.analytics.ExperimentExposeService" &
    dodis $CMD "$i/com.facebook.analytics.appstatelogger.AppStateIntentService" &
    dodis $CMD "$i/com.facebook.analytics2.logger.AlarmBasedUploadService" &
    dodis $CMD "$i/com.facebook.analytics2.logger.GooglePlayUploadService" &
    dodis $CMD "$i/com.facebook.analytics2.logger.LollipopUploadService" &
    dodis $CMD "$i/com.facebook.analytics2.logger.service.LollipopUploadSafeService" &
    dodis $CMD "$i/com.facebook.bugreporter.core.scheduler.GCMBugReportService" &
    dodis $CMD "$i/com.facebook.bugreporter.core.scheduler.LollipopBugReportService" &
    dodis $CMD "$i/com.facebook.common.errorreporting.memory.MemoryDumpUploadService" &
    dodis $CMD "$i/com.facebook.common.errorreporting.memory.service.jobschedulercompat.fbsvc.DumperUploadService" &
    dodis $CMD "$i/com.facebook.common.errorreporting.memory.service.jobschedulercompat.igsvc.DumperUploadGcmTaskService" &
    dodis $CMD "$i/com.facebook.common.errorreporting.memory.service.jobschedulercompat.igsvc.DumperUploadService" &
    dodis $CMD "$i/com.facebook.common.errorreporting.memory.service.jobschedulercompat.katanasvc.DumperUploadService" &
    dodis $CMD "$i/com.facebook.feed.platformads.AppInstallService" &
    dodis $CMD "$i/com.facebook.feed.platformads.AppInstallTrackerService" &
    dodis $CMD "$i/com.facebook.messaging.notify.logging.MessagesSystemTrayLogService" &
    dodis $CMD "$i/com.facebook.notifications.appwidget.bugreporter.NotificationsWidgetDebugHelper" &
    dodis $CMD "$i/com.facebook.push.crossapp.PackageRemovedReporterService" &
    dodis $CMD "$i/com.google.android.build.data.PropertiesServiceHolder" &
    dodis $CMD "$i/com.google.android.enterprise.connectedapps.CrossProfileConnector_Service" &
    dodis $CMD "$i/com.google.android.gms.ads.settings.AdsSettingsActivity" &
    dodis $CMD "$i/com.google.android.gms.common.config.PhenotypeCheckinService" &
    dodis $CMD "$i/com.google.android.gms.measurement.service.MeasurementBrokerService" &
    dodis $CMD "$i/com.google.android.libraries.inputmethod.featuresplit.metrics.FeatureSplitMultiprocessMetricsService" &
    dodis $CMD "$i/com.google.android.libraries.internal.growth.growthkit.internal.jobs.impl.GrowthKitBelowLollipopJobService" &
    dodis $CMD "$i/com.google.android.libraries.internal.growth.growthkit.internal.jobs.impl.GrowthKitJobService" &
    dodis $CMD "$i/com.google.android.libraries.phenotype.registration.PhenotypeMetadataHolderService" &
    dodis $CMD "$i/com.google.android.location.reporting.service.DispatchingService" &
    dodis $CMD "$i/com.google.android.location.reporting.service.ReportingAndroidService" &
    dodis $CMD "$i/com.google.android.location.reporting.service.ReportingSyncService" &
    dodis $CMD "$i/com.google.android.location.reporting.service.UploadGcmTaskService" &
    dodis $CMD "$i/com.google.commerce.tapandpay.android.phenotype.PhenotypeCommitTask" &
    dodis $CMD "$i/com.google.firebase.messaging.cpp.ListenerService" &
    dodis $CMD "$i/com.google.firebase.messaging.cpp.MessageForwardingService" &
    dodis $CMD "$i/com.google.firebase.messaging.cpp.RegistrationIntentService" &
    dodis $CMD "$i/com.instabug.library.internal.video.ScreenRecordingService" &
    dodis $CMD "$i/com.instabug.library.screenshot.ScreenshotCaptureService" &
    dodis $CMD "$i/com.instagram.bugreporter.BugReporterService" &
    dodis $CMD "$i/com.instagram.periodicreporter.SimInfoPeriodicRunnerJobService" &
    dodis $CMD "$i/com.mapbox.android.telemetry.MapboxTelemetryService" &
    dodis $CMD "$i/com.mapbox.android.telemetry.errors.ErrorReporterJobIntentService" &
    dodis $CMD "$i/com.mapbox.services.android.telemetry.service.TelemetryService" &
    dodis $CMD "$i/com.microsoft.appmanager.network.service.NetworkDataMetricsService" &
    dodis $CMD "$i/com.mparticle.messaging.InstanceIdService" &
    dodis $CMD "$i/com.mparticle.MPService" &
    dodis $CMD "$i/com.onfido.android.sdk.capture.ui.CrashHandlerService" &
    dodis $CMD "$i/com.onfido.android.sdk.capture.ui.MainProcessStarterService" &
    dodis $CMD "$i/com.onfido.android.sdk.capture.ui.OnfidoStarterService" &
    dodis $CMD "$i/com.onfido.android.sdk.capture.token.TokenExpirationHandlerService" &
    dodis $CMD "$i/com.salesforce.marketingcloud.MCService" &
    dodis $CMD "$i/com.salesforce.marketingcloud.NotificationOpenedService" &
    dodis $CMD "$i/com.salesforce.marketingcloud.messages.push.MCFirebaseMessagingService" &
    dodis $CMD "$i/com.salesforce.marketingcloud.sfmcsdk.SFMCSdkJobIntentService" &
    dodis $CMD "$i/com.samsung.android.app.routines.domainmodel.service.SALoggingJobService" &
    dodis $CMD "$i/com.samsung.android.dialtacts.model.component.service.usagereport.UsageReportServiceContact" &
    dodis $CMD "$i/com.samsung.android.dialtacts.model.component.service.usagereport.UsageReportServiceDialer" &
    dodis $CMD "$i/com.samsung.android.dialtacts.model.usagereportservice.UsageReportServiceModel\$UsageReportJobIntentService" &
    # dodis $CMD "$i/com.samsung.android.honeyboard.base.keyinputstatistics.KeyInputStatisticsUpdaterJobService" &
    dodis $CMD "$i/com.samsung.android.mdeccommon.samsunganalytics.StatusLoggingScheduler" &
    dodis $CMD "$i/com.samsung.android.messaging.common.dump.DumpLoggerService" &
    dodis $CMD "$i/com.samsung.android.rubin.serverinterface.batch.task.LogSendTask" &
    dodis $CMD "$i/com.samsung.android.weather.logger.LoggerService" &
    dodis $CMD "$i/com.samsung.sdk.clickstreamanalytics.internal.scheduler.CSAJobIntentService" &
    dodis $CMD "$i/com.sec.android.diagmonagent.sa.scheduler.DataLoggingUploadJobService" &
    dodis $CMD "$i/com.sec.android.diagmonagent.sa.scheduler.DiagnosticUploadJobService" &
    dodis $CMD "$i/com.sec.android.diagmonagent.log.ged.scheduler.GEDJobService" &
    dodis $CMD "$i/com.sec.modem.settings.cplogging.DiagDCIService" &
    dodis $CMD "$i/com.sec.modem.settings.cplogging.SilentLogService" &
    dodis $CMD "$i/com.snap.ms.ads.AdvertisingIdClientInfoFetcherApiService" &
    dodis $CMD "$i/com.ss.android.message.log.LogService" &
    dodis $CMD "$i/com.ss.android.socialbase.downloader.downloader.DownloadService" &
    dodis $CMD "$i/com.ss.android.socialbase.downloader.downloader.IndependentProcessDownloadService" &
    dodis $CMD "$i/com.ss.android.socialbase.downloader.downloader.SqlDownloadCacheService" &
    dodis $CMD "$i/com.ss.android.socialbase.downloader.impls.DownloadHandleService" &
    dodis $CMD "$i/com.ss.android.socialbase.downloader.notification.DownloadNotificationService" &
    dodis $CMD "$i/com.ubercab.healthline.crash.reporting.core.uploader.CrashUploadService" &
    dodis $CMD "$i/com.yandex.metrica.MetricaService" &
    dodis $CMD "$i/com.yulore.basic.cache.CacheService" &
    dodis $CMD "$i/com.yulore.basic.cache.YuloreJobService" &
    dodis $CMD "$i/de.appplant.cordova.plugin.localnotification.ClickReceiver" &
    dodis $CMD "$i/expo.modules.notifications.service.ExpoFirebaseMessagingService" &
    dodis $CMD "$i/expo.modules.location.services.LocationTaskService" &
    dodis $CMD "$i/expo.modules.taskManager.TaskJobService" &
    dodis $CMD "$i/io.invertase.firebase.messaging.ReactNativeFirebaseMessagingHeadlessService" &
    dodis $CMD "$i/io.invertase.firebase.messaging.ReactNativeFirebaseMessagingService" &
    dodis $CMD "$i/io.nlopez.smartlocation.activity.providers.ActivityGooglePlayServicesProvider\$ActivityRecognitionService" &
    dodis $CMD "$i/io.nlopez.smartlocation.geocoding.providers.AndroidGeocodingProvider\$AndroidGeocodingService" &
    dodis $CMD "$i/io.nlopez.smartlocation.geofencing.providers.GeofencingGooglePlayServicesProvider\$GeofencingService" &
    dodis $CMD "$i/io.invertase.firebase.messaging.ReactNativeFirebaseMessagingService" &
    dodis $CMD "$i/mozilla.components.lib.crash.service.SendCrashTelemetryService" &
    dodis $CMD "$i/org.microg.gms.measurement.MeasurementService" &
    dodis $CMD "$i/org.microg.gms.phenotype.PhenotypeService" &
    dodis $CMD "$i/org.mozilla.telemetry.schedule.jobscheduler.TelemetryJobService" &

    # test
    dodis $CMD "$i/com.sendbird.android.push.SendbirdFirebaseInstanceIDService" &
    dodis $CMD "$i/com.sendbird.android.push.SendbirdFirebaseMessagingService" &
    dodis $CMD "$i/com.sendbird.android.push.SendbirdHmsMessagingService" &
    dodis $CMD "$i/com.bytedance.common.wschannel.server.WsChannelService" &
    dodis $CMD "$i/com.bytedance.common.wschannel.client.WsClientService" &
    dodis $CMD "$i/com.bytedance.mira.am.KeepAlive" &
    dodis $CMD "$i/com.bytedance.mira.am.KeepAlive\$InnerService" &
    dodis $CMD "$i/com.bytedance.mira.stub.RedirectService" &
    dodis $CMD "$i/com.bytedance.mira.stub.p0.StubService1" &
    dodis $CMD "$i/com.bytedance.mira.stub.p1.StubService1" &
    dodis $CMD "$i/com.bytedance.mira.stub.p0.StubService2" &
    dodis $CMD "$i/com.bytedance.mira.stub.p1.StubService2" &
    dodis $CMD "$i/com.bytedance.mira.stub.p0.StubService3" &
    dodis $CMD "$i/com.bytedance.mira.stub.p0.StubService4" &
    dodis $CMD "$i/com.bytedance.crashtrigger.factory.crash.anr.ANRService" &
    dodis $CMD "$i/com.amazon.mShop.goals.location.LocationUpdatesService" &
    dodis $CMD "$i/ca.kijiji.adyendropin.adyen_dropin.AdyenDropinService" &
    dodis $CMD "$i/io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService" &
    dodis $CMD "$i/io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingService" &
    dodis $CMD "$i/com.baseflow.geolocator.GeolocatorLocationService" &
    dodis $CMD "$i/com.squareup.leakcanary.internal.HeapAnalyzerService" &
    dodis $CMD "$i/com.squareup.loakcanary.DisplayLeakService" &
    dodis $CMD "$i/com.taobao.accs.internal.AccsJobService" &
    dodis $CMD "$i/org.android.agoo.accs.AgooService" &
    dodis $CMD "$i/com.taobao.accs.windvane.BrowserACCSService" &
    dodis $CMD "$i/com.taobao.accs.ChannelService" &
    dodis $CMD "$i/com.taobao.accs.ChannelService\$KernelService" &
    dodis $CMD "$i/com.aliexpress.module.traffic.DDLAccsService" &
    dodis $CMD "$i/com.aliexpress.module.imsdk.agoo.ImAccsService" &
    dodis $CMD "$i/com.taobao.accs.data.MsgDistributeService" &
    dodis $CMD "$i/com.taobao.orange.accssupport.OrangeAccsService" &
    dodis $CMD "$i/com.aliexpress.module.ugc.adapter.powermsg.PowermsgAccsReceiveService" &
    dodis $CMD "$i/com.taobao.slide.accs.SlideAccsService" &
    dodis $CMD "$i/org.android.agoo.gcm.AgooFirebaseInstanceIDService" &
    dodis $CMD "$i/org.android.agoo.gcm.AgooFirebaseMessagingService" &
    dodis $CMD "$i/com.aliexpress.module.imsdk.agoo.AgooForIMService" &
    dodis $CMD "$i/com.aliexpress.module.imsdk.agoo.ImAgooService" &
    dodis $CMD "$i/com.taobao.agoo.TaobaoMessageIntentReceiverService" &
    dodis $CMD "$i/com.taobao.uc.service.GpuProcessService0" &
    dodis $CMD "$i/com.aliexpress.android.globalhouyi.aidlManager.PopAidlService" &
    dodis $CMD "$i/com.taobao.tao.powermsg.outter.PowerMsg4WXService" &
    dodis $CMD "$i/com.aliexpress.module.imagesearch.quicksetting.ScreenCaptureService" &
    dodis $CMD "$i/com.aliexpress.module.imagesearch.quicksetting.ScreenShotService" &
    dodis $CMD "$i/com.taobao.orange.service.OrangeApiService" &
    dodis $CMD "$i/anetwork.channel.aidl.NetworkService" &

    # test fb debloat
    dodis $CMD "$i/com.facebook.papaya.fb.client.services.FBPapayaJobService" &
    dodis $CMD "$i/com.facebook.facecast.display.debugoverlay.FacecastDebugOverlayService" &
    dodis $CMD "$i/com.facebook.facecast.broadcast.notifications.LiveAudioRoomV2NotificationService" &
    dodis $CMD "$i/com.facebook.conditionalworker.GooglePlayConditionalWorkerService" &
    dodis $CMD "$i/com.facebook.googleplay.GooglePlayInstallRefererService" &
    dodis $CMD "$i/com.facebook.pumpkin.PumpkinService" &
    dodis $CMD "$i/com.facebook.battery.monitor.ContinuousBatteryMonitorService" &
    dodis $CMD "$i/com.facebook.glc.LongRunningWifiMonitorService" &
    dodis $CMD "$i/com.facebook.glc.ScheduledWifiMonitorService" &
    # dodis $CMD "$i/com.facebook.fbservice.service.BlueService" &
    # dodis $CMD "$i/com.facebook.fbservice.service.BlueServiceJobIntentService" &
    dodis $CMD "$i/com.facebook.adinterfaces.service.BoostLiveService" &
    dodis $CMD "$i/com.facebook.video.tv.notification.CastNotificationActionService" &
    dodis $CMD "$i/com.facebook.screencast.ScreencastService" &
    dodis $CMD "$i/com.facebook.video.tv.mediasession.TVCastingMediaSessionService" &
    dodis $CMD "$i/com.facebook.media.local.UpdateLocalMediaStoreGcmTaskService" &
    dodis $CMD "$i/com.facebook.media.local.UpdateLocalMediaStoreJobService" &
    dodis $CMD "$i/com.facebook.fbpay.w3c.ipc.FBPaymentServiceImpl" &
    dodis $CMD "$i/com.facebook.fbpay.w3c.ipc.IsReadyToPayServiceImpl" &
    dodis $CMD "$i/com.fbpay.w3c.ipc.AutofillKeyFetchServiceImpl" &
    dodis $CMD "$i/com.facebook.directinstall.feed.progressservice.InstallNotificationService" &
    dodis $CMD "$i/com.facebook.voltron.download.scheduledinstaller.OxygenScheduledInstallerJobService" &
    dodis $CMD "$i/com.facebook.directinstall.feed.progressservice.ProgressService" &
    dodis $CMD "$i/com.facebook.directinstall.shortcut.ShortcutInstallerService" &
    dodis $CMD "$i/com.facebook.oxygen.preloads.sdk.firstparty.managedappcache.IsManagedAppCacheJobService" &
    dodis $CMD "$i/com.facebook.oxygen.preloads.sdk.firstparty.managedappcache.IsManagedAppCacheService" &
    dodis $CMD "$i/com.facebook.profilo.upload.TraceUploadRetryJob" &
    dodis $CMD "$i/com.facebook.places.suggestions.common.SuggestProfilePicUploadService" &
    dodis $CMD "$i/com.facebook.graphql.executor.offlinemutations.OfflineMutationsRetryGCMTaskService" &
    dodis $CMD "$i/com.facebook.graphql.executor.offlinemutations.OfflineMutationsRetryJobService" &
    dodis $CMD "$i/com.facebook.confirmation.service.AddPhoneNumberService" &
    dodis $CMD "$i/com.facebook.confirmation.service.AutoSmsConfirmService" &
    dodis $CMD "$i/com.facebook.push.negativefeedback.PushNegativeFeedbackFbJobIntentService" &
    dodis $CMD "$i/com.facebook.push.registration.PushNegativeFeedbackGCMService" &
    dodis $CMD "$i/com.facebook.push.registration.PushNegativeFeedbackLollipopService" &
    dodis $CMD "$i/com.facebook.reportaproblem.base.bugreport.BugReportUploadService" &
    dodis $CMD "$i/com.facebook.audiencenetwork.AudienceNetworkService" &
    dodis $CMD "$i/com.meta.payments.PaymentsService" &
    dodis $CMD "$i/com.meta.iap.IapService" &
    dodis $CMD "$i/com.facebook.everythingtogether.ipc.service.EverythingTogetherIpcService" &
    dodis $CMD "$i/com.facebook.messaging.universallinks.receiver.InstallReferrerFetchJobIntentService" &
    dodis $CMD "$i/com.facebook.papaya.fb.messenger.MessengerPapayaExecutionJobService" &
    dodis $CMD "$i/com.facebook.contacts.service.ContactLocaleChangeService" &
    dodis $CMD "$i/com.facebook.messaging.livelocation.bindings.LiveLocationForegroundService" &
    dodis $CMD "$i/com.facebook.messaging.livelocation.bindings.MessengerLiveLocationBooterService" &
    dodis $CMD "$i/com.facebook.messaging.phonebookintegration.account.MessengerAuthenticatorService" &
    dodis $CMD "$i/com.facebook.messaging.phonebookintegration.account.MessengerSyncAdapterService" &
    dodis $CMD "$i/com.facebook.messaging.stella.contacts.StellaContactsService" &
    dodis $CMD "$i/com.facebook.voltron.scheduler.AppModuleAlarmBasedDownloader" &
    dodis $CMD "$i/com.facebook.voltron.scheduler.AppModuleDownloadJobService" &
    dodis $CMD "$i/com.facebook.papaya.fb.instagram.PapayaExecutionJobService" &
    dodis $CMD "$i/com.instagram.notifications.local.LocalNotificationFetchInventoryJobService" &
    dodis $CMD "$i/com.instagram.creation.location.NearbyVenuesService" &
    dodis $CMD "$i/com.instagram.contacts.ccu.intf.CCUJobService" &
    dodis $CMD "$i/com.instagram.contacts.ccu.intf.CCUWorkerService" &
    dodis $CMD "$i/com.instagram.util.startup.tracking.TaskLifeDetectingService" &
    #dodis $CMD "$i/com.instagram.gallery.scanner.MediaScannerJobService" &
    dodis $CMD "$i/com.instagram.gallery.scanner.MediaScannerWorkerService" &
    dodis $CMD "$i/com.instagram.fbpay.w3c.ipc.FBPaymentServiceImpl" &
    dodis $CMD "$i/com.instagram.fbpay.w3c.ipc.IsReadyToPayServiceImpl" &
    dodis $CMD "$i/com.facebook.fbreact.autoupdater.ighttp.IgHttpUpdateGcmTaskService" &
    dodis $CMD "$i/com.facebook.fbreact.autoupdater.ighttp.IgHttpUpdateService" &
    dodis $CMD "$i/com.facebook.fbreact.autoupdater.ighttp.IgHttpUpdateServiceCompat" &
    dodis $CMD "$i/com.facebook.cameracore.mediapipeline.asyncscripting.AsyncScriptingService" &

    # even more stuff
    dodis $CMD "$i/com.dji.hwpack.HwMessageService" &
    dodis $CMD "$i/com.huawei.hms.support.api.push.service.HmsMsgService" &
    dodis $CMD "$i/com.huawei.agconnect.core.ServiceDiscovery" &
    dodis $CMD "$i/com.xiaomi.mipush.sdk.MessageHandleService" &
    dodis $CMD "$i/com.xiaomi.mipush.sdk.PushMessageHandler" &
    dodis $CMD "$i/com.xiaomi.push.service.XMJobService" &
    dodis $CMD "$i/com.xiaomi.push.service.XMPushService" &
    
    if [ "$i" == "com.google.android.gms" ]; then
        dodis $CMD "com.google.android.gms/com.google.android.gms.auth.account.authenticator.WorkAccountAuthenticatorInitializerReceiver" &
        dodis $CMD "com.google.android.gms/com.google.android.gms.auth.account.authenticator.WorkAccountAuthenticatorService" &
        dodis $CMD "com.google.android.gms/com.google.android.gms.auth.account.authenticator.WorkAccountAuthenticatorService" &
        dodis $CMD "com.google.android.gms/com.google.android.gms.auth.account.data.WorkAccountStoreReceiver" &
        dodis $CMD "com.google.android.gms/com.google.android.gms.auth.managed.ui.SetupWorkProfileActivity" &
        dodis $CMD "com.google.android.gms/com.google.android.gms.auth.uiflows.addaccount.CantAddWorkAccountActivity" &
        dodis $CMD "com.google.android.gms/com.google.android.gms.backup.component.MmsBackupSchedulerService" &
        dodis $CMD "com.google.android.gms/com.google.android.gms.backup.mms.MmsBackupService" &
        dodis $CMD "com.google.android.gms/com.google.android.gms.backup.mms.MmsRestoreService" &
        dodis $CMD "com.google.android.gms/com.google.android.location.ealert.ux.EAlertSafetyInfoActivity" &
        dodis $CMD "com.google.android.gms/com.google.android.gms.location.settings.ArwEAlertPlatformSettingsActivity" &
        dodis $CMD "com.google.android.gms/com.google.android.location.settings.ArwEAlertSettingsActivity" &
        dodis $CMD "com.google.android.gms/com.google.android.location.settings.ArwEAlertSettingsV31Activity" &
        dodis $CMD "com.google.android.gms/com.google.android.location.settings.EAlertGoogleSettingDebugActivity" &
        dodis $CMD "com.google.android.gms/com.google.android.gms.location.settings.EAlertPlatformSettingsActivity" &
        dodis $CMD "com.google.android.gms/com.google.android.location.settings.EAlertSettingsActivity" &
        dodis $CMD "com.google.android.gms/com.google.android.location.settings.EAlertSettingsV31Activity" &
		
		# our fork
		dodis $CMD "$i/com.google.android.gms.analytics.AnalyticsTaskService" &
		dodis $CMD "$i/com.google.android.gms.analytics.service.AnalyticsService" &
		dodis $CMD "$i/com.google.android.gms.checkin.CheckinApiService" &
		dodis $CMD "$i/com.google.android.gms.checkin.CheckinService" &
		dodis $CMD "$i/com.google.android.gms.checkin.EventLogService" &
		dodis $CMD "$i/com.google.android.gms.clearcut.debug.ClearcutDebugDumpService" &
		dodis $CMD "$i/com.google.android.gms.clearcut.uploader.QosUploaderService" &
		dodis $CMD "$i/com.google.android.gms.common.stats.GmsCoreStatsService" &
		dodis $CMD "$i/com.google.android.gms.common.stats.StatsUploadService" &
		dodis $CMD "$i/com.google.android.gms.common.stats.net.NetworkReportService" &
		dodis $CMD "$i/com.google.android.gms.googlehelp.metrics.ReportBatchedMetricsGcmTaskService" &
		dodis $CMD "$i/com.google.android.gms.growth.upgradeparty.scheduler.UpgradePartyTaskService" &
		dodis $CMD "$i/com.google.android.gms.growth.watchdog.GrowthWatchdogTaskService" &
		dodis $CMD "$i/com.google.android.gms.locationsharingreporter.service.reporting.periodic.PeriodicReportingMonitoringService" &
		dodis $CMD "$i/com.google.android.gms.magictether.logging.DailyMetricsLoggerService" & #seems to be restarted after reboot
		dodis $CMD "$i/com.google.android.gms.phenotype.gcm.GcmReceiverService" &
		dodis $CMD "$i/com.google.android.gms.phenotype.service.sync.PackageUpdateService" & #seems to be restarted after reboot
		dodis $CMD "$i/com.google.android.gms.phenotype.service.sync.PhenotypeConfigurator" &
		dodis $CMD "$i/com.google.android.gms.presencemanager.service.PresenceManagerPresenceReportService" &
		dodis $CMD "$i/com.google.android.gms.stats.PlatformStatsCollectorService" &
		dodis $CMD "$i/com.google.android.gms.stats.eastworld.EastworldService" &
		dodis $CMD "$i/com.google.android.gms.usagereporting.service.UsageReportingIntentService" &
    fi
    if [ "$i" == "com.google.android.apps.messaging" ]; then
        # disable MMS and RCS
        dodis $CMD "com.google.android.apps.messaging/android.support.v7.mms.MmsService" &
        dodis $CMD "com.google.android.apps.messaging/com.google.android.apps.messaging.rcsmigration.RcsMigrationService" &
        dodis $CMD "com.google.android.apps.messaging/com.google.android.apps.messaging.rcsprovisioning.RcsProvisioningBroadcastReceiver" &
        dodis $CMD "com.google.android.apps.messaging/com.google.android.apps.messaging.shared.rcs.messaging.MessagingEngineNotificationServer" &
        dodis $CMD "com.google.android.apps.messaging/com.google.android.apps.messaging.shared.receiver.IncomingRcsEventReceiver" &
        dodis $CMD "com.google.android.apps.messaging/com.google.android.apps.messaging.shared.receiver.RcsProvisioningEventReceiver" &
        dodis $CMD "com.google.android.apps.messaging/com.google.android.apps.messaging.ui.appsettings.RcsSettingsActivity" &
        dodis $CMD "com.google.android.apps.messaging/com.google.android.apps.messaging.ui.rcs.setup.auto.RcsPromoActivity" &
        dodis $CMD "com.google.android.apps.messaging/com.google.android.apps.messaging.ui.rcs.setup.manual.RcsSetupActivity" &
    fi
    if [ "$i" == "com.dvtonder.chronus" ]; then
        dodis $CMD "com.dvtonder.chronus/com.dvtonder.chronus.daydream.ChronusDaydreamService" &
        dodis $CMD "com.dvtonder.chronus/com.dvtonder.chronus.daydream.ChronusDaydreamServicePro" &
        dodis $CMD "com.dvtonder.chronus/com.dvtonder.chronus.news.NewsFeedViewsService" &
        dodis $CMD "com.dvtonder.chronus/com.dvtonder.chronus.tasks.TasksViewsService" &
        dodis $CMD "com.dvtonder.chronus/com.dvtonder.chronus.stocks.StocksViewsService" &
        dodis $CMD "com.dvtonder.chronus/com.dvtonder.chronus.extensions.gmail.GmailExtension" &
    fi
    if [ "$i" == "jp.pioneer.avsoft.android.icontrolav2014" ]; then
        dodis $CMD "jp.pioneer.avsoft.android.icontrolav2014/com.google.android.gms.ads.social.GcmSchedulerWakeupService" &
        dodis $CMD "jp.pioneer.avsoft.android.icontrolav2014/com.google.android.gms.ads.identifier.service.AdvertisingIdNotificationService" &
        dodis $CMD "jp.pioneer.avsoft.android.icontrolav2014/com.google.android.gms.ads.measurement.GmpConversionTrackingBrokerService" &
        dodis $CMD "jp.pioneer.avsoft.android.icontrolav2014/com.google.android.gms.ads.AdRequestBrokerService" &
        dodis $CMD "jp.pioneer.avsoft.android.icontrolav2014/com.google.android.gms.ads.cache.CacheBrokerService" &
        dodis $CMD "jp.pioneer.avsoft.android.icontrolav2014/com.google.android.gms.ads.settings.AdsSettingsActivity" &
        dodis $CMD "jp.pioneer.avsoft.android.icontrolav2014/com.google.android.gms.adsidentity.settings.AdsIdentitySettingsActivity" &
        dodis $CMD "jp.pioneer.avsoft.android.icontrolav2014/com.google.android.gms.adsidentity.settings.AdsIdentityPersonalizationActivity" &
        dodis $CMD "jp.pioneer.avsoft.android.icontrolav2014/com.google.android.gms.analytics.internal.PlayLogReportingService" &
    fi
    if [ "$i" == "com.teslacoilsw.launcher" ]; then
        dodis $CMD "com.teslacoilsw.launcher/com.teslacoilsw.launcher.NovaAccessibilityService" &
        dodis $CMD "com.teslacoilsw.launcher/com.android.launcher3.MemoryDumpActivity" &
    fi
    if [ "$i" == "com.garmin.android.apps.connectmobile" ]; then
        dodis $CMD "com.garmin.android.apps.connectmobile/com.alipay.sdk.app.AlipayResultActivity" &
        dodis $CMD "com.garmin.android.apps.connectmobile/com.alipay.sdk.app.APayEntranceActivity" &
        dodis $CMD "com.garmin.android.apps.connectmobile/com.alipay.sdk.app.H5AuthActivity" &
        dodis $CMD "com.garmin.android.apps.connectmobile/com.alipay.sdk.app.H5OpenAuthActivity" &
        dodis $CMD "com.garmin.android.apps.connectmobile/com.alipay.sdk.app.H5PayActivity" &
        dodis $CMD "com.garmin.android.apps.connectmobile/com.alipay.sdk.app.PayResultActivity" &
    fi
    if [ "$i" == "com.huami.watch.hmwatchmanager" ]; then
        dodis $CMD "com.huami.watch.hmwatchmanager/.wxapi.WXEntryActivity" &
        dodis $CMD "com.huami.watch.hmwatchmanager/.wxapi.WXPayEntryActivity" &
        dodis $CMD "com.huami.watch.hmwatchmanager/org.acra.sender.JobSenderService" &
        dodis $CMD "com.huami.watch.hmwatchmanager/org.acra.sender.LegacySenderService" &
        dodis $CMD "com.huami.watch.hmwatchmanager/org.acra.attachment.AcraContentProvider" &
        dodis $CMD "com.huami.watch.hmwatchmanager/com.alipay.sdk.app.APayEntranceActivity" &
        dodis $CMD "com.huami.watch.hmwatchmanager/com.alipay.sdk.app.AlipayResultActivity" &
        dodis $CMD "com.huami.watch.hmwatchmanager/com.alipay.sdk.app.H5AuthActivity" &
        dodis $CMD "com.huami.watch.hmwatchmanager/com.alipay.sdk.app.H5OpenAuthActivity" &
        dodis $CMD "com.huami.watch.hmwatchmanager/com.alipay.sdk.app.H5PayActivity" &
        dodis $CMD "com.huami.watch.hmwatchmanager/com.alipay.sdk.app.PayResultActivity" &
        dodis $CMD "com.huami.watch.hmwatchmanager/com.alipay.sdk.auth.AuthActivity" &
        dodis $CMD "com.huami.watch.hmwatchmanager/com.amap.api.location.APSService" &
        dodis $CMD "com.huami.watch.hmwatchmanager/com.sina.weibo.sdk.component.WeiboSdkBrowser" &
        dodis $CMD "com.huami.watch.hmwatchmanager/com.sina.weibo.sdk.content.FileProvider" &
        dodis $CMD "com.huami.watch.hmwatchmanager/com.sina.weibo.sdk.share.ShareTransActivity" &
        dodis $CMD "com.huami.watch.hmwatchmanager/com.sina.weibo.sdk.web.WebActivity" &
        dodis $CMD "com.huami.watch.hmwatchmanager/com.tencent.connect.common.AssistActivity" &
        dodis $CMD "com.huami.watch.hmwatchmanager/com.xiaomi.mipush.sdk.MessageHandleService" &
        dodis $CMD "com.huami.watch.hmwatchmanager/com.xiaomi.mipush.sdk.NotificationClickedActivity" &
        dodis $CMD "com.huami.watch.hmwatchmanager/com.xiaomi.mipush.sdk.PushMessageHandler" &
        dodis $CMD "com.huami.watch.hmwatchmanager/com.xiaomi.push.service.XMJobService" &
        dodis $CMD "com.huami.watch.hmwatchmanager/com.xiaomi.push.service.XMPushService" &
        dodis $CMD "com.huami.watch.hmwatchmanager/com.xiaomi.push.service.receivers.PingReceiver" &
    fi
    if [ "$i" == "com.twipemobile.dsmobile" ]; then
        dodis $CMD "com.twipemobile.dsmobile/com.urbanairship.actions.RateAppActivity" &
        dodis $CMD "com.twipemobile.dsmobile/com.urbanairship.actions.WalletLoadingActivity" &
        dodis $CMD "com.twipemobile.dsmobile/com.urbanairship.google.PlayServicesErrorActivity" &
        dodis $CMD "com.twipemobile.dsmobile/com.urbanairship.push.NotificationProxyActivity" &
        dodis $CMD "com.twipemobile.dsmobile/com.urbanairship.util.HelperActivity" &
        dodis $CMD "com.twipemobile.dsmobile/io.didomi.sdk.notice.ctv.TVNoticeDialogActivity" &
        dodis $CMD "com.twipemobile.dsmobile/io.didomi.sdk.vendors.ctv.TVPreferencesDialogActivity" &
        dodis $CMD "com.twipemobile.dsmobile/org.prebid.mobile.rendering.views.browser.AdBrowserActivity" &
        dodis $CMD "com.twipemobile.dsmobile/com.genius.sdk.MobilePlugin" &
        dodis $CMD "com.twipemobile.dsmobile/com.urbanairship.job.AirshipService" &
        dodis $CMD "com.twipemobile.dsmobile/com.urbanairship.job.AndroidJobService" &
        dodis $CMD "com.twipemobile.dsmobile/com.urbanairship.push.fcm.AirshipFirebaseMessagingService" &
        dodis $CMD "com.twipemobile.dsmobile/org.acra.sender.JobSenderService" &
        dodis $CMD "com.twipemobile.dsmobile/org.acra.sender.LegacySenderService" &
        dodis $CMD "com.twipemobile.dsmobile/com.urbanairship.locale.LocaleChangeReceiver" &
        dodis $CMD "com.twipemobile.dsmobile/com.urbanairship.push.NotificationProxyReceiver" &
    fi
    if [ "$i" == "com.devhd.feedly" ]; then
        dodis $CMD "com.devhd.feedly/org.acra.CrashReportDialog" &
        dodis $CMD "com.devhd.feedly/org.acra.dialog.CrashReportDialog" &
        dodis $CMD "com.devhd.feedly/org.acra.sender.SenderService" &
        # re-enable, otherwise feedly will crash
        pm enable "com.devhd.feedly/com.facebook.internal.FacebookInitProvider" > /dev/null &

    fi
    if [ "$i" == "com.groundspeak.geocaching.intro" ]; then
        dodis $CMD "com.groundspeak.geocaching.intro/com.apptentive.android.sdk.ApptentiveViewActivity" &
    fi
    if [ "$i" == "com.linkedin.android" ]; then
        dodis $CMD "com.linkedin.android/com.anagog.jedai.extension.DummyForContext" &
        dodis $CMD "com.linkedin.android/com.anagog.jedai.extension.ActivityFromBackground" &
        dodis $CMD "com.linkedin.android/com.anagog.jedai.extension.AndroidIntents" &
        dodis $CMD "com.linkedin.android/com.anagog.jedai.extension.BeaconMonitorReceiver" &
        dodis $CMD "com.linkedin.android/com.facebook.CustomTabActivity" &
    fi
    if [ "$i" == "com.teslacoilsw.launcher" ]; then
        dodis $CMD "com.teslacoilsw.launcher/org.matomo.sdk.extra.InstallReferrerReceiver" &
    fi
    if [ "$i" == "org.observation.obsidentify" ]; then
        dodis $CMD "org.observation.obsidentify/io.invertase.firebase.crashlytics.ReactNativeFirebaseCrashlyticsInitProvider" &
    fi
    if [ "$i" == "com.paypal.android.p2pmobile" ]; then
        dodis $CMD "com.paypal.android.p2pmobile/com.qualtrics.digital.QualtricsNotificationManager" &
        dodis $CMD "com.paypal.android.p2pmobile/com.qualtrics.digital.QualtricsPopOverActivity" &
        dodis $CMD "com.paypal.android.p2pmobile/com.qualtrics.digital.QualtricsSurveyActivity" &
    fi
    if [ "$i" == "ch.protonvpn.android" ]; then
        dodis $CMD "ch.protonvpn.android/io.sentry.android.core.SentryPerformanceProvider" &
    fi
    if [ "$i" == "com.sporteasy.android" ]; then
        dodis $CMD "com.sporteasy.android/zendesk.messaging.MessagingActivity" &
        dodis $CMD "com.sporteasy.android/zendesk.support.guide.HelpCenterActivity" &
        dodis $CMD "com.sporteasy.android/zendesk.support.guide.ViewArticleActivity" &
        dodis $CMD "com.sporteasy.android/zendesk.support.request.RequestActivity" &
        dodis $CMD "com.sporteasy.android/zendesk.support.requestlist.RequestListActivity" &
        dodis $CMD "com.sporteasy.android/zendesk.support.DeepLinkingBroadcastReceiver" &
        dodis $CMD "com.sporteasy.android/zendesk.belvedere.BelvedereFileProvider" &
    fi
    if [ "$i" == "com.strava" ]; then
        dodis $CMD "com.strava/.zendesk.ZendeskArticleLaunchingActivity" &
        dodis $CMD "com.strava/zendesk.messaging.MessagingActivity" &
        dodis $CMD "com.strava/zendesk.support.guide.HelpCenterActivity" &
        dodis $CMD "com.strava/zendesk.support.guide.ViewArticleActivity" &
        dodis $CMD "com.strava/zendesk.support.request.RequestActivity" &
        dodis $CMD "com.strava/zendesk.support.requestlist.RequestListActivity" &
        dodis $CMD "com.strava/zendesk.support.DeepLinkingBroadcastReceiver" &
        dodis $CMD "com.strava/zendesk.belvedere.BelvedereFileProvider" &
        dodis $CMD "com.strava/zendesk.support.guide.GuideSdkStartupProvider" &
        dodis $CMD "com.strava/zendesk.support.SupportSdkStartupProvider" &
        dodis $CMD "com.strava/com.mapbox.android.telemetry.errors.ErrorReporterJobIntentService" &
        dodis $CMD "com.strava/com.mapbox.android.telemetry.errors.MapboxTelemetryService" &
        dodis $CMD "com.strava/com.mapbox.android.telemetry.provider.MapnoxTelemetryInitProvider" &
        # re-enable, otherwise strava will crash
        pm enable "com.strava/com.facebook.internal.FacebookInitProvider" > /dev/null &
    fi
    if [ "$i" == "mobi.lockdown.weather" ]; then
        dodis $CMD "mobi.lockdown.weather/com.facebook.ads.AudienceNetworkActivity" &
        dodis $CMD "mobi.lockdown.weather/com.facebook.ads.AudienceNetworkContentProvider" &
    fi
    if [ "$i" == "com.twitter.android" ]; then
        dodis $CMD "com.twitter.android/.analytics.TweetAnalyticsWebViewActivity" &
        dodis $CMD "com.twitter.android/.dogfood.bugreporter.impl.BugReporterActivity" &
        # # dodis $CMD "com.twitter.android/com.openback.service.OpenBackService" &
        # # dodis $CMD "com.twitter.android/com.openback.receiver.OpenBackReceiver" &
        dodis $CMD "com.twitter.android/com.twitter.analytics.tracking.InstallationReferrer\$OemIntentReceiver" &
    fi
done
wait

echo "*** The script ran successfully. ***"
